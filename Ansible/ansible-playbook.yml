
- name: Deploy MEAN stack application with MongoDB in Docker
  hosts: mean_stack
  become: yes

  tasks:
    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Remove existing MongoDB container if it exists
      command: docker rm -f mongodb
      ignore_errors: yes

    - name: Create a Docker volume for MongoDB data
      command: docker volume create mongo_data

    - name: Pull MongoDB 4.4 Docker image
      command: docker pull mongo:4.4

    - name: Run MongoDB 4.4 container with volume
      command: >
        docker run --name mongodb \
                  -p 27017:27017 \
                  -v mongo_data:/data/db \
                  -d mongo:4.4

- name: Build Angular Project
  hosts: webservers
  become: yes
  tasks:
    - name: Clone the MEAN app repository
      git:
        repo: 'https://github.com/Moh4medNajjar/stage_BH'
        dest: /opt/stage_BH
        version: master
        force: yes

    - name: Change to project directory and install dependencies
      shell: |
        cd /opt/stage_BH/prov_app
        npm install
      environment:
        PATH: "/root/.npm-global/bin:{{ ansible_env.PATH }}"

    - name: Build Angular project
      shell: |
        cd /opt/stage_BH/prov_app
        npm run build
      environment:
        PATH: "/root/.npm-global/bin:{{ ansible_env.PATH }}"
      register: build_result
      failed_when: build_result.rc != 0

    - name: Handle build failures
      debug:
        msg: "Build failed: {{ build_result.stderr }}"
      when: build_result.rc != 0

- name: Configure Apache and Node.js
  hosts: mean_stack
  become: yes
  tasks:
    - name: Configure Apache to serve Angular app
      copy:
        dest: /etc/httpd/conf.d/stage_BH.conf
        content: |
          <VirtualHost *:80>
            DocumentRoot "/opt/stage_BH/prov_app/dist/prov_app/browser"
            <Directory "/opt/stage_BH/prov_app/dist/prov_app/browser">
              Options Indexes FollowSymLinks
              AllowOverride All
              Require all granted

              # Handle Angular routing
              <IfModule mod_rewrite.c>
                RewriteEngine On
                RewriteBase /
                RewriteCond %{REQUEST_FILENAME} !-f
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteRule ^ /index.html [L]
              </IfModule>
            </Directory>

            ErrorLog "/var/log/httpd/stage_BH-error.log"
            CustomLog "/var/log/httpd/stage_BH-access.log" common
          </VirtualHost>

    - name: Configure systemd service for Node.js app
      copy:
        dest: /etc/systemd/system/stage_BH.service
        content: |
          [Unit]
          Description=MEAN App
          After=network.target

          [Service]
          ExecStart=/usr/bin/node /opt/stage_BH/backend/app.js
          Restart=always
          User=nobody
          Group=nobody
          Environment=PORT=3000
          Environment=NODE_ENV=production
          WorkingDirectory=/opt/stage_BH/backend

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start the stage_BH service
      systemd:
        name: stage_BH
        state: started
        enabled: yes

- name: Setup and run Node.js app
  hosts: mean_stack
  become: yes
  tasks:
    - name: Stop and disable the stage_BH service if running
      systemd:
        name: stage_BH
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Remove existing node_modules and package-lock.json
      file:
        path: "/opt/stage_BH/backend/{{ item }}"
        state: absent
      with_items:
        - node_modules
        - package-lock.json
      ignore_errors: yes

    - name: Install Node.js app dependencies
      shell: |
        cd /opt/stage_BH/backend
        npm install
      environment:
        PATH: "/root/.npm-global/bin:{{ ansible_env.PATH }}"

    - name: Start the Node.js app
      systemd:
        name: stage_BH
        state: started
        enabled: yes
